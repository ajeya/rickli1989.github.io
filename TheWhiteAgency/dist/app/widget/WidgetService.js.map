{"version":3,"sources":["app/widget/WidgetService.js"],"names":[],"mappings":"AAAA,OAAO,SAAS,IAAI,UAAU,SAAS;EACrC;;EAEA,IAHI;EAIJ,OAAO;IACL,SAAS;IACT,SAAS,YAAY;MANnB,gBAAa,CAAA,YAAA;QACN,SADP,cACQ,IAAI,OAAM;UAQd,aAAa,eAAe,MAThC;;UAEF,KAAK,WAAW;UAChB,KAAK,KAAK;UACV,KAAK,QAAQ;UACb,KAAK;;;QAYD,aAAa,YAjBf,eAAa,CAAA;UAkBT,KAAK;UACL,OAXJ,SAAA,OAAE;WAYG;UACD,KAAK;UACL,OAXA,SAAA,WAAG;YACT,IAAI,QAAQ,KAAK,GAAG;;YAEpB,KAAK,MAAM,IAAI,KAAK,UAAU,KAAK,UAAC,MAAS;cAC3C,MAAM,QAAQ;;;YAGhB,OAAO,MAAM;;;QAcT,OAhCF;;;MAuBN,cAAc,UAAU,CAAC,MAAM;;MAczB,QAAQ,WAbC;;;GAgBZ","file":"app/widget/WidgetService.js","sourcesContent":["class WidgetService{\n  constructor($q, $http){\n    this.DATA_URL = \"app/json/data.json\";\n    this.$q = $q;\n    this.$http = $http;\n    this.init();\n  }\n\n  init(){ \n  }\n\n  loadJson() {\n    var defer = this.$q.defer();\n\n    this.$http.get(this.DATA_URL).then((data) => {\n      defer.resolve(data);\n    });\n\n    return defer.promise;\n  }\n\n}\n\nWidgetService.$inject = ['$q', '$http'];\nexport default WidgetService;"],"sourceRoot":"/source/"}