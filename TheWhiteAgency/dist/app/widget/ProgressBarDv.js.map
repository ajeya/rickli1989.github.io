{"version":3,"sources":["app/widget/ProgressBarDv.js"],"names":[],"mappings":"AAAA,OAAO,SAAS,CAAC,mBAAmB,8BAA8B,aAAa,UAAU,SAAS;EAChG;;EAEA,IAAI,UAAU,gBAAgB,UAA1B;EACJ,OAAO;IACL,SAAS,CAAC,UAAU,gBAAgB;MAClC,WAAW,eANT;OAOD,UAAU,0BAA0B;MACrC,iBAAiB,yBAAyB;OACzC,UAAU,WAAW;MACtB,WAAW,UAAU;;IAEvB,SAAS,YAAY;MATnB,gBAAa,CAAA,YAAA;QACN,SADP,cACQ,UAAS;UAWb,aAAa,eAAe,MAZhC;;UAEF,KAAK,WAAW;UAChB,KAAK,cAAc,eAAe;UAClC,KAAK,QAAQ;YACX,KAAK;YACL,OAAO;YACP,UAAU;;;UAGZ,KAAK,KAAK;;;QAeN,aAAa,YAzBf,eAAa,CAAA;UA0BT,KAAK;UACL,OAdJ,SAAA,KAAC,UAAS;YACZ,KAAK,sBAAsB;YAC3B,KAAK,WAAW;;WAgBT;UACD,KAAK;UACL,OAfJ,SAAA,KAAC,OAAO,SAAS,MAAK;YACxB,MAAM,SAAS;YACf,IAAI,OAAO;YACX,KAAK,SAAS,WAAW,UAAC,MAAS;cACjC,IAAG,OAAO,KAAK,KAAK,qBAAoB;gBACtC,QAAQ,QAAQ,QAAQ,GAAG,cAAc,iBAAiB,IAAI,SAAQ;gBACtE,MAAM;qBACF,IAAG,OAAO,KAAK,CAAC,KAAK,qBAAoB;gBAC7C,MAAM;;;;YAIV,MAAM,eAAe,YAAM;cACzB,IAAI,MAAM,QAAQ,QAAQ,QAAQ,GAAG,cAAc;;cAEnD,SAAS,KACP;gBACE,OAAO;gBACP,iBAAiB;iBAEnB;gBACE,QAAQ,CAAE,MAAM;gBAChB,UAAU,MAAM,WAAS;gBACzB,OAAO,SAAA,QAAU;kBACf,KAAK,sBAAsB;kBAC3B,MAAM,WAAW,YAAU;oBACzB,MAAM,WAAW;;;gBAGrB,UAAU,SAAA,SAAS,UAAU,UAAU,WAAW,OAAO,YAAY;kBACnE,MAAM,WAAW,YAAU;oBACzB,MAAM,WAAW,cAAc,SAAS,WAAY,MAAK,KAAK;;;;cAItE,SAAS,KACP;gBACE,OAAO;gBACP,iBAAiB;iBAEnB;gBACE,QAAQ,CAAE,MAAM;gBAChB,UAAU,MAAM,WAAS;gBACzB,UAAU,SAAA,SAAS,UAAU,UAAU,WAAW,OAAO,YAAY;kBACnE,MAAM,WAAW,YAAU;oBACzB,MAAM,WAAW,cAAc,SAAU,WAAW,MAAK,IAAI,MAAM;;;gBAGvE,UAAU,SAAA,WAAU;kBAClB,MAAM,WAAW,YAAU;oBACzB,MAAM,WAAW;;kBAEnB,MAAM,SAAS;kBACf,KAAK,sBAAsB;;;;YAInC,MAAM,WAAW,YAAU;cACzB,MAAM;;;YAGR,MAAM,cAAc,YAAM;cACxB,KAAK,SAAS,KACZ,KAAK,SAAS,SACX,QAAQ,0BACR,SAAS,eACT,UAAU;;;;QAWb,OA/FF;;;MA2FN,cAAc,UAAU,CAAC;;MAEzB,SAAS,sBAAsB,UAAU,eAAe;;;GAUrD","file":"app/widget/ProgressBarDv.js","sourcesContent":["import {register} from 'app/widget/Util';\nimport ProgressBarTpl from 'app/widget/progressbar.tpl';\nimport Velocity from 'velocity';\nclass ProgressBarDv{\n  constructor($mdToast){\n    this.restrict = 'E';\n    this.templateUrl = ProgressBarTpl.name;\n    this.scope = {\n      end: '@',\n      start: '@',\n      duration: '@'\n    }\n    \n    this.init($mdToast);\n  }\n\n  init($mdToast){\n    this.isAnimationFinished = false;\n    this.$mdToast = $mdToast;\n  }\n\n  link(scope, element, attr){\n    scope.finish = false;\n    var that = this;\n    attr.$observe(\"counter\", (data) => {\n      if(data > 1 && that.isAnimationFinished){\n        angular.element(element[0].querySelector(\".progressbar\")).css(\"width\",\"0px\");\n        scope.startAnimate();\n      }else if(data > 1 && !that.isAnimationFinished){\n        scope.showWarning();\n      }\n    });\n\n    scope.startAnimate = () => {\n      var ele = angular.element(element[0].querySelector('.progressbar'));\n\n      Velocity(ele,\n        { \n          width: \"50%\",\n          backgroundColor: \"#5CC9FF\"\n        },\n        { \n          easing: [ scope.end ],\n          duration: scope.duration/2,\n          begin: function(){\n            that.isAnimationFinished = false;\n            scope.$evalAsync(function(){\n              scope.progress = \"Progress 0%\";\n            });\n          },\n          progress: function(elements, complete, remaining, start, tweenValue) {\n            scope.$evalAsync(function(){\n              scope.progress = \"Progress \" + parseInt((complete * 100)/2) + \"%\";\n            });\n          }\n        });\n      Velocity(ele,\n        { \n          width: \"100%\",\n          backgroundColor: \"#00E854\"\n        },\n        { \n          easing: [ scope.end ],\n          duration: scope.duration/2,\n          progress: function(elements, complete, remaining, start, tweenValue) {\n            scope.$evalAsync(function(){\n              scope.progress = \"Progress \" + parseInt((complete * 100)/2 + 50) + \"%\";\n            });\n          },\n          complete: function(){\n            scope.$evalAsync(function(){\n              scope.progress = \"This task is 100% completed\";\n            });\n            scope.finish = true;\n            that.isAnimationFinished = true;\n          },\n        });\n    }\n    scope.$evalAsync(function(){\n      scope.startAnimate();\n    });\n\n    scope.showWarning = () => {\n      that.$mdToast.show(\n        that.$mdToast.simple()\n          .content('Wait animation finish!')\n          .position('bottom left')\n          .hideDelay(3000)\n      );\n    };\n  }\n\n}\n\nProgressBarDv.$inject = ['$mdToast'];\n\nregister('TheWhiteAgency.app').directive('progressBar', ProgressBarDv);"],"sourceRoot":"/source/"}