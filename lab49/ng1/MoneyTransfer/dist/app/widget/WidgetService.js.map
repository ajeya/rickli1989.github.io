{"version":3,"sources":["app/widget/WidgetService.js"],"names":[],"mappings":"AAAA,OAAO,SAAS,CAAC,UAAU,0BAA0B,qCAAqC,UAAU,SAAS;EAC3G;;EAEA,IAAI,GAAG,SACH;;EACJ,OAAO;IACL,SAAS,CAAC,UAAU,SAAS;MAC3B,IAAI,QAAQ;OACX,UAAU,uBAAuB;MAClC,UAAU,sBAAsB;OAC/B,UAAU,gCAAgC;IAC7C,SAAS,YAAY;MAPnB,gBAAa,CAAA,YAAA;QACN,SADP,gBACS;UASL,aAAa,eAAe,MAVhC;;UAEF,KAAK,QAAQ;UACb,KAAK,iBAAiB,CAAC,OAAO,OAAO;UACrC,KAAK,WAAW,CAAC,MAAM,SAAS;UAChC,KAAK,YAAY,CACf,EAAC,OAAM,EAAE,OAAM,MAAK,OAAM,UAC1B,EAAC,OAAM,EAAE,OAAM,MAAK,OAAM,UAC1B,EAAC,OAAM,EAAE,OAAM,KAAK,OAAM;UAE5B,KAAK;;;QASD,aAAa,YAnBf,eAAa,CAAA;UAoBT,KAAK;UACL,OARJ,SAAA,OAAE;YACJ,IAAI,OAAO;YACX,IAAI,UAAU,EAAE,IAAI,KAAK,gBAAgB,KAAK;YAC9C,EAAE,KAAK,SAAS,UAAC,GAAM;cACrB,KAAK,MAAM,KACT;gBACE,QAAQ,EAAE;gBACV,UAAU,QAAQ,SAAS,EAAE,IAAI,eAAe,SAAS;;;;WAWxD;UACD,KAAK;UACL,OAPC,SAAA,UAAC,SAAQ;YAChB,OAAO,EAAE,OAAO,KAAK,OAAO,UAAC,GAAM;cACjC,OAAO,EAAE,QAAQ;eAChB,GAAG;;WASC;UACD,KAAK;UACL,OARA,SAAA,WAAG;YACT,OAAO,KAAK;;WAUL;UACD,KAAK;UACL,OATK,SAAA,gBAAE;YACb,OAAO,KAAK;;WAWL;UACD,KAAK;UACL,OAVI,SAAA,aAAC,WAAW,SAAS,YAAW;YAC1C,IAAI,MAAM,MAAM,IAAI,OAAO,UAAU,SAAS,IAAI,OAAO,GAAG;YAC5D,aAAa,QAAQ,KAAK,KAAK,UAAU;cACvC,MAAM;cACN,YAAY;gBACV,UAAU;gBACV,WAAW,UAAQ,OAAK;;;;WAcrB;UACD,KAAK;UACL,OAXM,SAAA,eAAC,WAAW,SAAS,YAAW;YAC5C,IAAI,SAAS,EAAE,OAAO,KAAK,WAAW,UAAS,GAAE;cAC/C,OAAO,QAAQ,UAAU,EAAE;eAC1B;YACH,IAAI,OAAO,QAAQ,UAAU,OAAO,SAAS,eAAe,OAAO,SAAS,cAAc;;YAE1F,OAAO,QAAQ,YAAY,MAAM,OAAO;;;QAcpC,OAvEF;;;MA0EA,QAAQ,WAXC;;;GAcZ","file":"app/widget/WidgetService.js","sourcesContent":["import _ from 'lodash';\nimport numeral from 'adamwdraper/Numeral-js';\nimport 'adamwdraper/Numeral-js/languages';\n\nclass WidgetService{\n  constructor(){\n    this.langs = [];\n    this.currenciesList = ['AUD', 'GBP', 'USD'];\n    this.langData = ['en', 'en-gb', 'en'];\n    this.reference = [\n      {\"USD\":{ \"GBP\":0.64,\"AUD\":1.27}}, \n      {\"GBP\":{ \"USD\":1.55,\"AUD\":1.97}}, \n      {\"AUD\":{ \"GBP\":0.5, \"USD\":0.7 }}\n    ];\n    this.init();\n  }\n\n  init(){\n    let that = this;\n    let zipData = _.zip(this.currenciesList, this.langData);\n    _.each(zipData, (v) => {\n      that.langs.push(\n        {\n          'lang': v[0],\n          'symbol': numeral.language(v[1]).languageData().currency.symbol\n        }\n      );\n    });\n  }\n\n  getSymbol(country){\n    return _.filter(this.langs, (v) => {\n      return v.lang == country;\n    })[0].symbol;\n  }\n\n  getLangs() {\n    return this.langs;\n  }\n\n  getCurrencies(){\n    return this.currenciesList;\n  }\n\n  storeToLocal(sendMoney, sendCur, receiveCur){\n    let uId = '_' + new Date().getTime().toString(36).substr(2, 9);\n    localStorage.setItem(uId, JSON.stringify({\n      'id': uId,\n      'transfer': {\n        'amount': sendMoney,\n        'ccpaire': sendCur+\"->\"+receiveCur\n      }\n    }));\n  }\n\n  calcConversion(sendMoney, sendCur, receiveCur){\n    var result = _.filter(this.reference, function(v){\n      return angular.isDefined(v[sendCur]);\n    })[0];  \n    var rate = angular.isDefined(result[sendCur][receiveCur]) ? result[sendCur][receiveCur] : 1;\n\n    return numeral(sendMoney * rate).format('0.00');\n  }\n\n\n}\n\nexport default WidgetService;"],"sourceRoot":"/source/"}